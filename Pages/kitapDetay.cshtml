@page "{id:int}"
@model Kitapyurdu_Clone.Pages.kitapDetayModel
@{
    ViewData["Title"] = Model.Book?.Title;
}

@Html.AntiForgeryToken()

<div class="product-details">
    <div class="product-image">
        <img src="@Model.Book?.ImagePath" alt="@Model.Book?.Title">
    </div>
    <div class="product-info">
        <h1>@Model.Book?.Title</h1>
        <p class="price">@Model.Book?.Price.ToString("C")</p>
        <div class="book-rating">
            <span>Ortalama Puan: @(Model.Book?.Rating != null ? ((decimal)Model.Book.Rating).ToString("0.0") : "Henüz puan verilmemiş")</span>
            <div class="stars">
                @for (int i = 1; i <= 5; i++)
                {
                    if (Model.Book?.Rating != null && ((decimal)Model.Book.Rating) >= i)
                    {
                        <span class="star filled">★</span>
                    }
                    else
                    {
                        <span class="star">☆</span>
                    }
                }
            </div>
        </div>
        <p class="stock">Stok Durumu: @(Model.Book?.Stock > 0 ? "Stokta var" : "Stokta yok")</p>
        @if (Model.Book?.Stock > 0)
        {
            <button class="add-to-cart" onclick="addToCart(@Model.Book.BookID)">Sepete Ekle</button>
        }
        else
        {
            <button class="add-to-cart" disabled>Stokta Yok</button>
        }
    </div>
</div>

<div class="reviews-section">
    <h2>Yorumlar</h2>
    @if (Model.Reviews != null && Model.Reviews.Any())
    {
        <ul>
            @foreach (var review in Model.Reviews)
            {
                <div class="review-card">
                    <div class="review-header">
                        <span class="user-name">@review.UserName</span>
                        <div class="rating">
                            @for (int i = 1; i <= 5; i++)
                            {
                                if (i <= review.Rating)
                                {
                                    <span class="star filled">★</span>
                                }
                                else
                                {
                                    <span class="star">☆</span>
                                }
                            }
                        </div>
                        <span class="review-date">@review.CreatedAt.ToString("dd.MM.yyyy")</span>
                    </div>
                    <div class="review-content">
                        <p>@review.Comment</p>
                    </div>
                </div>
            }
        </ul>
    }
    else
    {
        <p class="no-reviews">Bu kitap için henüz yorum yapılmamış.</p>
    }

    @if (User.Identity.IsAuthenticated)
    {
        <!-- Yorum ekleme formu -->
        <div class="review-form">
            <h3>Yorum Ekle</h3>
            <form method="post">
                <input type="hidden" name="bookId" value="@Model.Book.BookID" />
                <div class="rating-input">
                    <label>Puanınız:</label>
                    <select name="rating" required>
                        <option value="1">1</option>
                        <option value="2">2</option>
                        <option value="3">3</option>
                        <option value="4">4</option>
                        <option value="5">5</option>
                    </select>
                </div>
                <textarea name="comment" placeholder="Yorumunuzu buraya yazın..." required></textarea>
                <button type="submit">Yorum Ekle</button>
            </form>
        </div>
    }
    else
    {
        <div class="login-prompt">
            <p>Yorum yapabilmek için lütfen <a href="/Login">giriş yapın</a>.</p>
        </div>
    }
</div>

@section Scripts {
    <script>
        async function addToCart(bookId) {
            try {
                const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
                console.log('Token:', token);
                console.log('BookId:', bookId);

                const response = await fetch(`/kitapDetay/${bookId}?handler=AddToCart`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': token
                    },
                    body: JSON.stringify({ bookId: bookId })
                });

                console.log('Response status:', response.status);
                const responseText = await response.text();
                console.log('Response text:', responseText);

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const result = JSON.parse(responseText);

                if (result.success) {
                    alert(result.message);
                    const cartCount = document.getElementById('cart-items-empty');
                    if (cartCount) {
                        cartCount.textContent = result.cartItemCount > 0
                            ? `Sepetinizde ${result.cartItemCount} ürün var`
                            : 'Sepetiniz boş';
                    }
                } else {
                    alert(result.message || 'Bir hata oluştu');
                }
            } catch (error) {
                console.error('Hata detayı:', error);
                alert('Bir hata oluştu: ' + error.message);
            }
        }
    </script>

    <style>
        .product-details {
            display: flex;
            padding: 20px;
            max-width: 1200px;
            margin: 0 auto;
            gap: 40px;
        }

        .product-image {
            flex: 0 0 400px;
        }

            .product-image img {
                width: 100%;
                height: auto;
                object-fit: cover;
            }

        .product-info {
            flex: 1;
        }

            .product-info h1 {
                margin: 0 0 20px 0;
                font-size: 24px;
                color: #333;
            }

        .price {
            font-size: 24px;
            color: #e44d26;
            margin: 10px 0;
        }

        .stock {
            color: #666;
            margin: 10px 0;
        }

        .add-to-cart {
            background-color: #e44d26;
            color: white;
            border: none;
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
            border-radius: 4px;
            transition: background-color 0.3s;
        }

            .add-to-cart:hover {
                background-color: #c73e1d;
            }

            .add-to-cart:disabled {
                background-color: #ccc;
                cursor: not-allowed;
            }

        /* Yorum bölümü stilleri */
        .reviews-section {
            max-width: 1200px;
            margin: 40px auto;
            padding: 0 20px;
        }

            .reviews-section h2 {
                color: #333;
                margin-bottom: 20px;
                font-size: 22px;
            }

        .review-card {
            background: #f9f9f9;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 15px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .review-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
        }

        .user-name {
            font-weight: bold;
            color: #444;
        }

        .rating {
            color: #ffd700;
        }

        .star {
            font-size: 18px;
        }

            .star.filled {
                color: #ffd700;
            }

        .review-date {
            color: #888;
            font-size: 14px;
        }

        .review-content {
            color: #666;
            line-height: 1.5;
        }

        .no-reviews {
            text-align: center;
            color: #666;
            padding: 20px;
            background: #f9f9f9;
            border-radius: 8px;
        }

        .review-form {
            margin-top: 20px;
            padding: 15px;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

            .review-form h3 {
                margin-bottom: 15px;
                color: #333;
            }

            .review-form textarea {
                width: 100%;
                min-height: 100px;
                padding: 10px;
                margin-bottom: 10px;
                border: 1px solid #ddd;
                border-radius: 4px;
                resize: vertical;
            }

            .review-form button {
                padding: 10px 20px;
                background-color: #ff6600;
                color: white;
                border: none;
                border-radius: 4px;
                cursor: pointer;
                font-weight: bold;
            }

                .review-form button:hover {
                    background-color: #e65c00;
                }
    </style>
}


